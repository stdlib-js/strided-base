{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name binary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary}\n*/\nsetReadOnly( ns, 'binary', require( '@stdlib/strided-base-binary' ) );\n\n/**\n* @name binaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-addon-dispatch}\n*/\nsetReadOnly( ns, 'binaryAddonDispatch', require( '@stdlib/strided-base-binary-addon-dispatch' ) );\n\n/**\n* @name binaryDtypeSignatures\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-dtype-signatures}\n*/\nsetReadOnly( ns, 'binaryDtypeSignatures', require( '@stdlib/strided-base-binary-dtype-signatures' ) );\n\n/**\n* @name binarySignatureCallbacks\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-signature-callbacks}\n*/\nsetReadOnly( ns, 'binarySignatureCallbacks', require( '@stdlib/strided-base-binary-signature-callbacks' ) );\n\n/**\n* @name cmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/cmap}\n*/\nsetReadOnly( ns, 'cmap', require( '@stdlib/strided-base-cmap' ) );\n\n/**\n* @name dmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmap}\n*/\nsetReadOnly( ns, 'dmap', require( '@stdlib/strided-base-dmap' ) );\n\n/**\n* @name dmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmap2}\n*/\nsetReadOnly( ns, 'dmap2', require( '@stdlib/strided-base-dmap2' ) );\n\n/**\n* @name dmskmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmskmap}\n*/\nsetReadOnly( ns, 'dmskmap', require( '@stdlib/strided-base-dmskmap' ) );\n\n/**\n* @name dmskmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmskmap2}\n*/\nsetReadOnly( ns, 'dmskmap2', require( '@stdlib/strided-base-dmskmap2' ) );\n\n/**\n* @name dtypeEnum2Str\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-enum2str}\n*/\nsetReadOnly( ns, 'dtypeEnum2Str', require( '@stdlib/strided-base-dtype-enum2str' ) );\n\n/**\n* @name dtypeResolveEnum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-resolve-enum}\n*/\nsetReadOnly( ns, 'dtypeResolveEnum', require( '@stdlib/strided-base-dtype-resolve-enum' ) );\n\n/**\n* @name dtypeResolveStr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-resolve-str}\n*/\nsetReadOnly( ns, 'dtypeResolveStr', require( '@stdlib/strided-base-dtype-resolve-str' ) );\n\n/**\n* @name dtypeStr2Enum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-str2enum}\n*/\nsetReadOnly( ns, 'dtypeStr2Enum', require( '@stdlib/strided-base-dtype-str2enum' ) );\n\n/**\n* @name mapBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/map-by}\n*/\nsetReadOnly( ns, 'mapBy', require( '@stdlib/strided-base-map-by' ) );\n\n/**\n* @name mapBy2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/map-by2}\n*/\nsetReadOnly( ns, 'mapBy2', require( '@stdlib/strided-base-map-by2' ) );\n\n/**\n* @name maxViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/max-view-buffer-index}\n*/\nsetReadOnly( ns, 'maxViewBufferIndex', require( '@stdlib/strided-base-max-view-buffer-index' ) );\n\n/**\n* @name metaDataProps\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/meta-data-props}\n*/\nsetReadOnly( ns, 'metaDataProps', require( '@stdlib/strided-base-meta-data-props' ) );\n\n/**\n* @name minViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/min-view-buffer-index}\n*/\nsetReadOnly( ns, 'minViewBufferIndex', require( '@stdlib/strided-base-min-view-buffer-index' ) );\n\n/**\n* @name mskunary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/mskunary}\n*/\nsetReadOnly( ns, 'mskunary', require( '@stdlib/strided-base-mskunary' ) );\n\n/**\n* @name nullary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/nullary}\n*/\nsetReadOnly( ns, 'nullary', require( '@stdlib/strided-base-nullary' ) );\n\n/**\n* @name offsetView\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/offset-view}\n*/\nsetReadOnly( ns, 'offsetView', require( '@stdlib/strided-base-offset-view' ) );\n\n/**\n* @name quaternary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/quaternary}\n*/\nsetReadOnly( ns, 'quaternary', require( '@stdlib/strided-base-quaternary' ) );\n\n/**\n* @name quinary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/quinary}\n*/\nsetReadOnly( ns, 'quinary', require( '@stdlib/strided-base-quinary' ) );\n\n/**\n* @name reinterpretComplex64\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/reinterpret-complex64}\n*/\nsetReadOnly( ns, 'reinterpretComplex64', require( '@stdlib/strided-base-reinterpret-complex64' ) );\n\n/**\n* @name reinterpretComplex128\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/reinterpret-complex128}\n*/\nsetReadOnly( ns, 'reinterpretComplex128', require( '@stdlib/strided-base-reinterpret-complex128' ) );\n\n/**\n* @name smap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smap}\n*/\nsetReadOnly( ns, 'smap', require( '@stdlib/strided-base-smap' ) );\n\n/**\n* @name smap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smap2}\n*/\nsetReadOnly( ns, 'smap2', require( '@stdlib/strided-base-smap2' ) );\n\n/**\n* @name smskmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smskmap}\n*/\nsetReadOnly( ns, 'smskmap', require( '@stdlib/strided-base-smskmap' ) );\n\n/**\n* @name smskmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smskmap2}\n*/\nsetReadOnly( ns, 'smskmap2', require( '@stdlib/strided-base-smskmap2' ) );\n\n/**\n* @name ternary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/ternary}\n*/\nsetReadOnly( ns, 'ternary', require( '@stdlib/strided-base-ternary' ) );\n\n/**\n* @name unary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary}\n*/\nsetReadOnly( ns, 'unary', require( '@stdlib/strided-base-unary' ) );\n\n/**\n* @name unaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary-addon-dispatch}\n*/\nsetReadOnly( ns, 'unaryAddonDispatch', require( '@stdlib/strided-base-unary-addon-dispatch' ) );\n\n/**\n* @name zmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/zmap}\n*/\nsetReadOnly( ns, 'zmap', require( '@stdlib/strided-base-zmap' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],"names":["setReadOnly","require$$0","ns","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","lib"],"mappings":";;ivNA0BA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,SAAAC,GASAH,EAAAE,EAAA,sBAAAE,GASAJ,EAAAE,EAAA,wBAAAG,GASAL,EAAAE,EAAA,2BAAAI,GASAN,EAAAE,EAAA,OAAAK,GASAP,EAAAE,EAAA,OAAAM,GASAR,EAAAE,EAAA,QAAAO,GASAT,EAAAE,EAAA,UAAAQ,GASAV,EAAAE,EAAA,WAAAS,GASAX,EAAAE,EAAA,gBAAAU,GASAZ,EAAAE,EAAA,mBAAAW,GASAb,EAAAE,EAAA,kBAAAY,GASAd,EAAAE,EAAA,gBAAAa,GASAf,EAAAE,EAAA,QAAAc,GASAhB,EAAAE,EAAA,SAAAe,GASAjB,EAAAE,EAAA,qBAAAgB,GASAlB,EAAAE,EAAA,gBAAAiB,GASAnB,EAAAE,EAAA,qBAAAkB,GASApB,EAAAE,EAAA,WAAAmB,GASArB,EAAAE,EAAA,UAAAoB,GASAtB,EAAAE,EAAA,aAAAqB,GASAvB,EAAAE,EAAA,aAAAsB,GASAxB,EAAAE,EAAA,UAAAuB,GASAzB,EAAAE,EAAA,uBAAAwB,GASA1B,EAAAE,EAAA,wBAAAyB,GASA3B,EAAAE,EAAA,OAAA0B,GASA5B,EAAAE,EAAA,QAAA2B,GASA7B,EAAAE,EAAA,UAAA4B,GASA9B,EAAAE,EAAA,WAAA6B,GASA/B,EAAAE,EAAA,UAAA8B,GASAhC,EAAAE,EAAA,QAAA+B,GASAjC,EAAAE,EAAA,qBAAAgC,GASAlC,EAAAE,EAAA,OAAAiC,GAKA,IAAAC,EAAAlC"}